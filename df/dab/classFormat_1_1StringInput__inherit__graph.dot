digraph "Format::StringInput"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{Format::StringInput\n||+  StringInput() noexcept=default\l+  StringInput(StringInput &&other) noexcept=default\l+ StringInput & operator\>\>(bool &b)\l+ StringInput & operator\>\>(Stream::Char auto &c)\l+ StringInput & operator\>\>(Stream::Integer auto &i)\l+ StringInput & fromChars(Stream::Integer auto &i, unsigned base)\l+ StringInput & operator\>\>(std::floating_point auto &f)\l+ StringInput & fromChars(std::floating_point auto &f, std::chars_format fmt, std::size_t precision=0)\l+ std::string_view getLine(std::size_t limit=std::numeric_limits\< std::size_t \>::max())\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{Stream::TransformInput\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="/tmp/build/x64/Release/Stream/tag.xml$db/d03/classStream_1_1TransformInput.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{Stream::Input\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="/tmp/build/x64/Release/Stream/tag.xml$d7/d83/classStream_1_1Input.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 [label="{Format::String\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$df/d21/classFormat_1_1String.html",tooltip=" "];
}
